// Generated by CoffeeScript 1.8.0
module.exports = {
  initGame: function(room) {
    var userData;
    userData = {
      inviteData: room.inviteData
    };
    room.game.bones = userData.inviteData.bones = this.Backgammon.generateBones();
    room.game.lotbones = userData.inviteData.lotbones = this.Backgammon.generateLotBones();
    room.game.pieces = userData.inviteData.pieces = this.Backgammon.generatePieces(30);
    return userData;
  },
  setFirst: function(room) {
    if (room.game.lotbones[0] > room.game.lotbones[1]) {
      return room.players[0];
    } else {
      return room.players[1];
    }
  },
  doTurn: function(room, user, turn) {
    if ('data' in turn) {
      if (turn.data.end) {
        console.log('turn end! :-)');
        turn.data.bones = this.Backgammon.generateBones();
      }
    }
    return turn;
  },
  switchPlayer: function(room, user, turn) {
    if (turn !== void 0 && 'data' in turn) {
      if (turn.data.end) {
        if (room.players[0] === user) {
          return room.players[1];
        } else {
          return room.players[0];
        }
      } else {
        return user;
      }
    } else {
      return user;
    }
  },
  getGameResult: function(room, user, turn) {
    switch (turn.action.result) {
      case 1:
        console.log('TEST turn result', turn);
        return {
          winner: user
        };
      case 3:
        return {
          winner: null
        };
      default:
        return false;
    }
  },
  Backgammon: {
    generatePieces: function(countpieces) {
      var i, pieces, _i;
      pieces = [];
      for (i = _i = 0; 0 <= countpieces ? _i < countpieces : _i > countpieces; i = 0 <= countpieces ? ++_i : --_i) {
        pieces[i] = i;
      }
      console.log(pieces);
      return pieces;
    },
    generateBones: function() {
      var bones;
      bones = [0, 0];
      bones[0] = this.randomNumber(1, 6);
      bones[1] = this.randomNumber(1, 6);
      return bones;
    },
    generateLotBones: function() {
      var bones, random, unic;
      bones = [0, 0];
      unic = false;
      bones[0] = this.randomNumber(1, 6);
      bones[1] = (function() {
        var _results;
        _results = [];
        while (!unic) {
          random = this.randomNumber(1, 6);
          if (random !== bones[0]) {
            unic = true;
            _results.push(bones[1] = random);
          } else {
            _results.push(void 0);
          }
        }
        return _results;
      }).call(this);
      return bones;
    },
    randomNumber: function(min, max) {
      var rand;
      rand = min - 0.5 + Math.random() * (max - min + 1);
      rand = Math.round(rand);
      return rand;
    }
  }
};
